# -----------------------------------------------------------
# Attempt to recreate Chris' VM env

FROM centos:7

LABEL maintainer="Tom Jones"

RUN yum -y update

RUN yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm

RUN yum -y install gcc gcc-c++ libtool tcl

RUN yum -y install python3 python3-devel swig3

RUN yum -y install python-devel 

RUN yum -y install openssl openssl-devel openssl-static openssl-libs

RUN yum -y install  libtiff libtiff-devel jasper jasper-devel openjpeg openjpeg-devel libpng libpng-devel

RUN yum -y install readline readline-devel bison bison-devel flex flex-devel

RUN yum -y install libxml2 libxml2-devel json-c json-c-devel

RUN yum -y install git nano

RUN yum -y install m4


RUN mkdir ~/src \
# curl 
	&& cd ~/src \
	&& git clone https://github.com/curl/curl.git \
	&& cd curl \
	&& git fetch --tags \
	&& latestTag=$(git describe --tags `git rev-list --tags --max-count=1`) \
	&& git checkout $latestTag\ 
	&& autoreconf -fi \
	&& ./configure --prefix /opt/curl -with-ssl=/usr/ \
	&& make \
	&& make install \
	&& echo '/opt/curl/lib' | tee /etc/ld.so.conf.d/curl.conf \
	&& ldconfig \
	&& mv /bin/curl /bin/curl.old \
	&& ln -s /opt/curl/bin/curl /bin/curl \
	&& cd ~/src \
# sqlite 
	&& git clone https://github.com/sqlite/sqlite.git \
	&& cd sqlite \
	&& git fetch --tags \
	&& latestTag=$(git describe --tags `git rev-list --tags --max-count=1`) \
	&& git checkout $latestTag \
	&& ./configure --prefix /opt/sqlite \
	&& make \
	&& make install \
	&& echo '/opt/sqlite/lib' | tee /etc/ld.so.conf.d/sqlite.conf \
	&& ldconfig \
	&& mv /bin/sqlite3 /bin/sqlite3.old\
	&& ln -s /opt/sqlite/bin/sqlite3 /bin/sqlite3


RUN yum -y install which
RUN which libtoolize --help

# proj 
RUN cd ~/src \
    && git clone https://github.com/OSGeo/PROJ.git \
    && cd PROJ \
    && git fetch --tags \
    && latestTag=$(git describe --tags `git rev-list --tags --max-count=1`) \
    && git checkout $latestTag \
    && ./autogen.sh \
    && SQLITE3_CFLAGS="-I/opt/sqlite/include" SQLITE3_LIBS="-L/opt/sqlite/lib -lsqlite3" ./configure --prefix=/opt/proj --with-curl=/opt/curl/bin/curl-config \
    && make \
    && make install \
    && echo '/opt/proj/lib' | tee /etc/ld.so.conf.d/proj.conf \
    && ldconfig \
# add bin directory to path
	&& echo 'export PATH=/opt/proj/bin:$PATH' >>~/.bash_profile \
# geos 
	&& cd ~/src \
    && git clone https://github.com/libgeos/geos.git \
    && cd geos \
    && git fetch --tags \
    && latestTag=$(git describe --tags `git rev-list --tags --max-count=1`) \
    && git checkout $latestTag \
    && ./autogen.sh \
    && ./configure --prefix=/opt/geos \
    && make \
    && make install \
    && echo '/opt/geos/lib' | tee /etc/ld.so.conf.d/geos.conf \
    && ldconfig \
# postgres
    && cd ~/src \
	&& git clone --single-branch --branch REL_13_STABLE https://github.com/postgres/postgres.git \
	&& cd postgres \
	&& latestTag=$(git describe --tags `git rev-list --tags --max-count=1`) \
	&& git checkout $latestTag \
	&& CPPFLAGS="-I/usr/include/python3.6m/" LDFLAGS="-L/usr/lib64 -lpython3" ./configure --with-openssl --with-python \
	&& make \
	&& make install \
	&& cd contrib \
	&& make \
	&& make install \
	&& echo '/usr/local/pgsql/lib' | tee /etc/ld.so.conf.d/pq.conf \
	&& ldconfig \
# add bin directory to path
	&& echo 'export PATH=/usr/local/pgsql/bin:$PATH' >>~/.bash_profile

# gdal 
RUN cd ~/src \
	&& git clone --single-branch --branch release/3.2 https://github.com/OSGeo/gdal.git \
	&& cd gdal/gdal \
	&& CPPFLAGS="-I/opt/proj/include -I/opt/curl/include -I/opt/sqlite/include" LDFLAGS="-L/opt/proj/lib -L/opt/curl/lib -L/opt/sqlite/lib" PQ_CFLAGS="-I/usr/local/pgsql/include" PQ_LIBS="-L/usr/local/pgsql/lib -lpq" ./configure --prefix=/opt/gdal --with-geos=/opt/geos/bin/geos-config --with-pg --with-python=/usr/bin/python3 --with-proj=/opt/proj --with-curl=/opt/curl/bin/curl-config \
	&& make \
	&& make install \
# add bin directory to path
	&& echo 'export PATH=/opt/gdal/bin:$PATH' >>~/.bash_profile \
## postgis
    && cd ~/src \
	&& git clone --single-branch --branch stable-3.0 https://github.com/postgis/postgis.git \
	&& cd postgis \
	&& latestTag=$(git describe --tags `git rev-list --tags --max-count=1`) \
	&& git checkout $latestTag \
	&& ./autogen.sh \
	&& CPPFLAGS="-I/opt/proj/include -I/opt/sqlite/include" LDFLAGS="-L/opt/proj/lib -L/opt/sqlite/lib" ./configure --with-geosconfig=/opt/geos/bin/geos-config --with-projdir=/opt/proj \
	&& make \
	&& make install