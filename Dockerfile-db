# -----------------------------------------------------------
# Attempt to recreate Chris' VM env

FROM centos:7

LABEL maintainer="Tom Jones"

# update os
RUN yum -y update

# install gnu compiler collection version 8
RUN yum install -y centos-release-scl
RUN yum install -y devtoolset-8

# setup gnu compiler collection version 8
RUN scl enable devtoolset-8 bash
RUN echo "source scl_source enable devtoolset-8" >> /etc/bashrc

# build tools
RUN yum -y install automake autoconf libtool tcl

# python 3 
RUN yum -y install python3 python3-devel swig3

# python 2
RUN yum -y install python-devel 

# openssl
RUN yum -y install openssl openssl-devel openssl-static openssl-libs

# image libs
RUN yum -y install libtiff libtiff-devel jasper jasper-devel openjpeg openjpeg-devel libpng libpng-devel

# postgresql dependencies
RUN yum -y install readline readline-devel bison bison-devel flex flex-devel

# file formats
RUN yum -y install libxml2 libxml2-devel json-c json-c-devel

# utilities
RUN yum -y install git nano which file libxslt

RUN mkdir ~/src \
# curl 
	&& cd ~/src \
	&& source /etc/bashrc \
	&& git clone https://github.com/curl/curl.git \
	&& cd curl \
	&& git fetch --tags \
	&& latestTag=$(git describe --tags `git rev-list --tags --max-count=1`) \
	&& git checkout $latestTag\ 
	&& autoreconf -fi \
	&& ./configure --prefix /opt/curl -with-ssl=/usr/ \
	&& make \
	&& make install \
	&& echo '/opt/curl/lib' | tee /etc/ld.so.conf.d/curl.conf \
	&& ldconfig \
	&& mv /bin/curl /bin/curl.old \
	&& ln -s /opt/curl/bin/curl /bin/curl

# sqlite 
RUN cd ~/src \
	&& source /etc/bashrc \
	&& git clone https://github.com/sqlite/sqlite.git \
	&& cd sqlite \
	&& git fetch --tags \
	&& latestTag=$(git describe --tags `git rev-list --tags --max-count=1`) \
	&& git checkout $latestTag \
	&& ./configure --prefix /opt/sqlite \
	&& make \
	&& make install \
	&& echo '/opt/sqlite/lib' | tee /etc/ld.so.conf.d/sqlite.conf \
	&& ldconfig \
	&& mv /bin/sqlite3 /bin/sqlite3.old\
	&& ln -s /opt/sqlite/bin/sqlite3 /bin/sqlite3

# proj 
RUN cd ~/src \
	&& source /etc/bashrc \
    && git clone --single-branch --branch 7.2 https://github.com/OSGeo/PROJ.git \
    && cd PROJ \
    && latestTag=$(git describe --tags `git rev-list --tags --max-count=1`) \
    && git checkout $latestTag \
    && ./autogen.sh \
    && SQLITE3_CFLAGS="-I/opt/sqlite/include" SQLITE3_LIBS="-L/opt/sqlite/lib -lsqlite3" ./configure --prefix=/opt/proj --with-curl=/opt/curl/bin/curl-config \
    && make \
    && make install \
    && echo '/opt/proj/lib' | tee /etc/ld.so.conf.d/proj.conf \
    && ldconfig \
	&& sed '/export PATH/i PATH=/opt/proj/bin:$PATH' ~/.bash_profile > ~/.bash_profile.update \
	&& mv ~/.bash_profile.update ~/.bash_profile
	
# geos 
RUN cd ~/src \
	&& source /etc/bashrc \
    && git clone https://github.com/libgeos/geos.git \
    && cd geos \
    && git fetch --tags \
    && latestTag=$(git describe --tags `git rev-list --tags --max-count=1`) \
    && git checkout $latestTag \
    && ./autogen.sh \
    && ./configure --prefix=/opt/geos \
    && make \
    && make install \
    && echo '/opt/geos/lib' | tee /etc/ld.so.conf.d/geos.conf \
    && ldconfig
		
# postgres
RUN cd ~/src \
	&& source /etc/bashrc \
	&& git clone --single-branch --branch REL_13_STABLE https://github.com/postgres/postgres.git \
	&& cd postgres \
	&& latestTag=$(git describe --tags `git rev-list --tags --max-count=1`) \
	&& git checkout $latestTag \
	&& CPPFLAGS="-I/usr/include/python3.6m/" LDFLAGS="-L/usr/lib64 -lpython3" ./configure --with-openssl --with-python \
	&& make \
	&& make install \
	&& cd contrib \
	&& make \
	&& make install \
	&& echo '/usr/local/pgsql/lib' | tee /etc/ld.so.conf.d/pq.conf \
	&& ldconfig \
	&& sed '/export PATH/i PATH=/usr/local/pgsql/bin:$PATH' ~/.bash_profile > ~/.bash_profile.update \
	&& mv ~/.bash_profile.update ~/.bash_profile

# gdal 
RUN cd ~/src \
	&& source /etc/bashrc \
	&& git clone --single-branch --branch release/3.2 https://github.com/OSGeo/gdal.git \
	&& cd gdal/gdal \
	&& CPPFLAGS="-I/opt/proj/include -I/opt/curl/include -I/opt/sqlite/include" LDFLAGS="-L/opt/proj/lib -L/opt/curl/lib -L/opt/sqlite/lib" PQ_CFLAGS="-I/usr/local/pgsql/include" PQ_LIBS="-L/usr/local/pgsql/lib -lpq" ./configure --prefix=/opt/gdal --with-geos=/opt/geos/bin/geos-config --with-pg --with-python=/usr/bin/python3 --with-proj=/opt/proj --with-curl=/opt/curl/bin/curl-config \
	&& make \
	&& make install \
    && echo '/opt/gdal/lib' | tee /etc/ld.so.conf.d/gdal.conf \
    && ldconfig \
	&& sed '/export PATH/i PATH=/opt/gdal/bin:$PATH' ~/.bash_profile > ~/.bash_profile.update \
	&& mv ~/.bash_profile.update ~/.bash_profile

## postgis
RUN cd ~/src \
	&& source /etc/bashrc \
	&& source ~/.bash_profile \
	&& git clone --single-branch --branch stable-3.0 https://github.com/postgis/postgis.git \
	&& cd postgis \
	&& latestTag=$(git describe --tags `git rev-list --tags --max-count=1`) \
	&& git checkout $latestTag \
	&& ./autogen.sh \
	&& CPPFLAGS="-I/opt/proj/include -I/opt/sqlite/include" LDFLAGS="-L/opt/proj/lib -L/opt/sqlite/lib" ./configure --with-geosconfig=/opt/geos/bin/geos-config --with-projdir=/opt/proj --with-gdalconfig=/opt/gdal/bin/gdal-config \
	&& make \
	&& make install

# build gdal / pyproj python libraries
RUN	source /etc/bashrc \
	&& source ~/.bash_profile \
	&& pip3 install Cython --user \
	&& pip3 install gdal --user \
	&& pip3 install pyproj --user

# add install location to python path
RUN echo "PYTHONPATH=/root/.local/lib/python3.6/site-packages:$PYTHONPATH" >> ~/.bash_profile
RUN echo "export PYTHONPATH" >> ~/.bash_profile

# add proj lib env variable
RUN echo "export GDAL_DATA=/opt/gdal/share/gdal/" >> ~/.bash_profile
RUN echo "export PROJ_LIB=/opt/proj/share/proj/" >> ~/.bash_profile

# create postgres user with database directory
RUN adduser postgres \
	&& mkdir /usr/local/pgsql/data \
	&& chown postgres /usr/local/pgsql/data

# start postgresql server with ssgp database
USER postgres
RUN cd ~ \
	&& /usr/local/pgsql/bin/initdb -D /usr/local/pgsql/data \
	&& /usr/local/pgsql/bin/pg_ctl -D /usr/local/pgsql/data start \ 
	&& /usr/local/pgsql/bin/createdb ssgp \
	&& /usr/local/pgsql/bin/createuser -s root  \
	&& /usr/local/pgsql/bin/psql -d ssgp -c "GRANT ALL PRIVILEGES ON DATABASE ssgp TO root" \
	&& /usr/local/pgsql/bin/psql -d ssgp -c "CREATE EXTENSION postgis" \
	&& /usr/local/pgsql/bin/psql -d ssgp -c "CREATE SCHEMA pygeoapi"

# install code to index google cloud ssgp datasets
USER root
RUN source /etc/bashrc \
	&& source ~/.bash_profile \
	&& pip3.6 install google-cloud-storage --user \
	&& pip3.6 install pyyaml --user \
	&& pip3.6 install psycopg2 --user \ 
	&& pip3.6 install shapely --user \
	&& pip3.6 install pystac --user

# install gcp security key
RUN mkdir ~/.gcs
COPY gi-science-d2fa240b37e3.json /root/.gcs/gi-science-d2fa240b37e3.json
RUN echo "export GOOGLE_APPLICATION_CREDENTIALS=/root/.gcs/gi-science-d2fa240b37e3.json" >> ~/.bash_profile

## install software
RUN cd ~/src \
	&& source /etc/bashrc \
	&& source ~/.bash_profile \
	&& su -c "/usr/local/pgsql/bin/pg_ctl -D /usr/local/pgsql/data start" -s /bin/sh postgres \
	&& git clone https://github.com/chris010970/ogc.git \
	&& python3 ~/src/ogc/pygeoapi/src/run.py ~/src/ogc/pygeoapi/cfg/ssgp-config.yml
	
# open server port
EXPOSE 5432

CMD su -c "/usr/local/pgsql/bin/pg_ctl -D /usr/local/pgsql/data start" -s /bin/sh postgres
